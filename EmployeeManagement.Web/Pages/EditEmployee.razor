@page "/editemployee/{id}"
@page "/editemployee"


@inherits EditEmployeeBase

<EditForm Model="@EditEmployeeModel" OnValidSubmit="HandleValidSubmit">
    <h3>@ActionName Employee</h3>
    <hr />
    <DataAnnotationsValidator></DataAnnotationsValidator>
    @*<ValidationSummary></ValidationSummary>*@
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">
            First Name
        </label>
        <div class="col-sm-10">
            <InputText id="firstName" class="form-control" placeholder="First Name"
                       @bind-Value="EditEmployeeModel.FirstName"></InputText>
            <ValidationMessage For="@(() => EditEmployeeModel.FirstName)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
            Last Name
        </label>
        <div class="col-sm-10">
            <InputText id="lastName" class="form-control" placeholder="Last Name"
                       @bind-Value="EditEmployeeModel.LastName"></InputText>
            <ValidationMessage For="@(() => EditEmployeeModel.LastName)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="Email"
                       @bind-Value="EditEmployeeModel.Email"></InputText>
            <ValidationMessage For="@(() => EditEmployeeModel.Email)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Confirm Email
        </label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="Email"
                       @bind-Value="EditEmployeeModel.ConfirmEmail"></InputText>
            <ValidationMessage For="@(() => EditEmployeeModel.ConfirmEmail)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            Department
        </label>
        <div class="col-sm-10">
            <CustomInputSelect id="department" class="form-control" @bind-Value="EditEmployeeModel.DepartmentId">
                @foreach (var dept in Departments)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            </CustomInputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="gender" class="col-sm-2 col-form-label">
            Gender
        </label>
        <div class="col-sm-10">
            <InputSelect id="gender" class="form-control" @bind-Value="EditEmployeeModel.Gender">
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="form-group row">
        <label for="dob" class="col-sm-2 col-form-label">
            Date Of Birth
        </label>
        <div class="col-sm-10">
            <InputDate @bind-Value="EditEmployeeModel.DOB" @bind-Value:format="dd/MM/yyyy"
                       id="dob" class="form-control"></InputDate>
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Submit</button>
    @if (ActionName == "Edit")
    {
        <button class="btn btn-danger" type="button" @onclick="Delete_Click">Delete</button>
    }
</EditForm>
<Confirm ConfirmationChanged="Delete_Confirmation_Click" ModalTitle="Confirm Delete"
         ModalBody=@($"Are you sure want to delete \"{Employee.FirstName} {Employee.LastName}\"") @ref="DeleteConfirmation"></Confirm>
@code{

    protected EmployeeManagement.Components.Confirm DeleteConfirmation { get; set; }

    protected async Task Delete_Click()
    {
        DeleteConfirmation.Show();
    }
    protected async Task Delete_Confirmation_Click(bool isConfirmation)
    {
        if (isConfirmation)
        {
            await EmployeeService.DeleteEmployee(Employee.EmployeeId);
            NavManager.NavigateTo("/");
        }
    }
}