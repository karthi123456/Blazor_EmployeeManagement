

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Employee Management</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    @if (User.Identity.IsAuthenticated)
    {
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/editemployee" @onclick="HandleClick">
                    <span class="oi oi-file" aria-hidden="true"></span> Create
                </NavLink>
            </li>
        </ul>
    }
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    @inject NavigationManager NavManager;

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    public System.Security.Claims.ClaimsPrincipal User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;
        User = authState.User;
    }

    protected void HandleClick()
    {
        NavManager.NavigateTo("/editemployee", true);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
